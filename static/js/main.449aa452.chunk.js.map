{"version":3,"sources":["pages/Home.js","helpers/PrivateRoute.js","pages/Login.js","pages/Friends.js","pages/ForgotPassword.js","pages/Addresses.js","components/BottomNav.js","helpers/ProvideAuth.js","App.js","reportWebVitals.js","index.js"],"names":["Home","fakeAuth","isAuthenticated","authenticate","cb","this","setTimeout","signout","PrivateRoute","children","rest","render","location","to","pathname","state","from","Login","useState","redirectToReferrer","setRedirectToReferrer","useLocation","history","useHistory","onClick","push","Friends","friends","id","firstName","faker","name","lastName","email","internet","data","generateFriends","map","friend","ForgotPassword","Addresses","addresses","city","address","streetName","country","generateAddresses","BottomNav","AppBar","position","Toolbar","variant","ButtonGroup","color","aria-label","Button","InputLabel","signin","authContext","createContext","ProvideAuth","auth","user","setUser","useProvideAuth","Provider","value","App","className","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.449aa452.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Home() {\r\n  return <div>Home</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const fakeAuth = {\r\n  isAuthenticated: false,\r\n  authenticate(cb) {\r\n    this.isAuthenticated = true;\r\n    setTimeout(cb, 100); // fake async\r\n  },\r\n  signout(cb) {\r\n    this.isAuthenticated = false;\r\n    setTimeout(cb, 100); // fake async\r\n  },\r\n};\r\n\r\nexport default function PrivateRoute({ children, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) => {\r\n        return fakeAuth.isAuthenticated === true ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: {\r\n                from: location,\r\n              },\r\n            }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory, useLocation, Redirect } from \"react-router-dom\";\r\n\r\nimport { fakeAuth } from \"../helpers/PrivateRoute\";\r\n\r\nexport default function Login() {\r\n  const [redirectToReferrer, setRedirectToReferrer] = useState(false);\r\n\r\n  const { state } = useLocation();\r\n  const history = useHistory();\r\n\r\n  const login = () => {\r\n    fakeAuth.authenticate(() => {\r\n      setRedirectToReferrer(true);\r\n    });\r\n  };\r\n\r\n  if (redirectToReferrer) {\r\n    return <Redirect to={state?.from || \"/\"} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={login}>Log in</button>\r\n      <button onClick={() => history.push(\"/forgotPassword\")}>\r\n        Forgot my password\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport faker from \"faker\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction generateFriends() {\r\n  let friends = [];\r\n\r\n  for (let id = 1; id <= 100; id++) {\r\n    let firstName = faker.name.firstName();\r\n    let lastName = faker.name.lastName();\r\n    let email = faker.internet.email();\r\n\r\n    friends.push({\r\n      id,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n    });\r\n  }\r\n\r\n  return { data: friends };\r\n}\r\n\r\nexport default function Friends() {\r\n  const [friends, setFriends] = useState(generateFriends().data);\r\n\r\n  return (\r\n    <div>\r\n      {friends.map((friend) => (\r\n        <div>\r\n          <span>\r\n            {friend.id} - {friend.firstName} - {friend.lastName} -{\" \"}\r\n            {friend.email}\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ForgotPassword() {\r\n  return <div>ForgotPassword</div>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport faker from \"faker\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction generateAddresses() {\r\n  let addresses = [];\r\n\r\n  for (let id = 1; id <= 100; id++) {\r\n    let city = faker.address.city();\r\n    let streetName = faker.address.streetName();\r\n    let country = faker.address.country();\r\n\r\n    addresses.push({\r\n      id,\r\n      city,\r\n      streetName,\r\n      country,\r\n    });\r\n  }\r\n\r\n  return { data: addresses };\r\n}\r\n\r\nexport default function Addresses() {\r\n  const [addresses, setAddresses] = useState(generateAddresses().data);\r\n\r\n  return (\r\n    <div>\r\n      {addresses.map((address) => (\r\n        <div>\r\n          <span>\r\n            {address.id} - {address.city} - {address.streetName} -\r\n            {address.country}\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Button, InputLabel } from \"@material-ui/core\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nexport default function BottomNav() {\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          <ButtonGroup\r\n            color=\"secondary\"\r\n            aria-label=\"outlined primary button group\"\r\n          >\r\n            <Button>\r\n              <InputLabel>\r\n                <Link to=\"/login\">Login</Link>\r\n              </InputLabel>\r\n            </Button>\r\n            <Button>\r\n              <InputLabel>\r\n                <Link to=\"/\">Home</Link>\r\n              </InputLabel>\r\n            </Button>\r\n            <Button>\r\n              <InputLabel>\r\n                <Link to=\"/friends\">Friends</Link>\r\n              </InputLabel>\r\n            </Button>\r\n            <Button>\r\n              <InputLabel>\r\n                <Link to=\"/addresses\">Addresses</Link>\r\n              </InputLabel>\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useContext, createContext } from \"react\";\r\n\r\nconst fakeAuth = {\r\n  isAuthenticated: false,\r\n  signin(cb) {\r\n    fakeAuth.isAuthenticated = true;\r\n    setTimeout(cb, 100); // fake async\r\n  },\r\n  signout(cb) {\r\n    fakeAuth.isAuthenticated = false;\r\n    setTimeout(cb, 100);\r\n  },\r\n};\r\n\r\nconst authContext = createContext();\r\n\r\nexport default function ProvideAuth({ children }) {\r\n  const auth = useProvideAuth();\r\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\r\n}\r\n\r\nexport function useAuth() {\r\n  return useContext(authContext);\r\n}\r\n\r\nfunction useProvideAuth() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const signin = (cb) => {\r\n    return fakeAuth.signin(() => {\r\n      setUser(\"user\");\r\n      cb();\r\n    });\r\n  };\r\n\r\n  const signout = (cb) => {\r\n    return fakeAuth.signout(() => {\r\n      setUser(null);\r\n      cb();\r\n    });\r\n  };\r\n\r\n  return {\r\n    user,\r\n    signin,\r\n    signout,\r\n  };\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Friends from \"./pages/Friends\";\nimport ForgotPassword from \"./pages/ForgotPassword\";\nimport Addresses from \"./pages/Addresses\";\nimport BottomNav from \"./components/BottomNav\";\nimport ProvideAuth from \"./helpers/ProvideAuth\";\nimport PrivateRoute from \"./helpers/PrivateRoute\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <ProvideAuth>\n      <Router>\n        <BottomNav />\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/forgotPassword\">\n              <ForgotPassword />\n            </Route>\n            <PrivateRoute>\n              <Addresses />\n            </PrivateRoute>\n            <PrivateRoute>\n              <Friends />\n            </PrivateRoute>\n            <Route path=\"*\">\n              <Login />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </ProvideAuth>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}